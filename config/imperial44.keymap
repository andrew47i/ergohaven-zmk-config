#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <16 15 14 13>;
            quick-tap-ms = <175>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <19 20 21 22>;
            quick-tap-ms = <175>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        ie_io: ie_io {
            compatible = "zmk,behavior-tap-dance";
            label = "IE_IO";
            #binding-cells = <0>;
            bindings = <&kp RU_CYRILLIC_IE>, <&kp RU_CYRILLIC_IO>;

            tapping-term-ms = <200>;
        };

        soft_sign_soft_hard: soft_sign_soft_hard {
            compatible = "zmk,behavior-tap-dance";
            label = "SOFT_SIGN_SOFT_HARD";
            #binding-cells = <0>;
            bindings = <&kp RU_CYRILLIC_SOFT_SIGN>, <&kp RU_CYRILLIC_HARD_SIGN>;

            tapping-term-ms = <200>;
        };

        en_qmark_excl: en_qmark_excl {
            compatible = "zmk,behavior-tap-dance";
            label = "EN_QMARK_EXCL";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;

            tapping-term-ms = <200>;
        };

        ru_qmark_excl: ru_qmark_excl {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_QMARK_EXCL";
            #binding-cells = <0>;
            bindings = <&kp RU_QUESTION>, <&kp RU_EXCLAMATION>;

            tapping-term-ms = <200>;
        };

        en_pipe_ampersand: en_pipe_ampersand {
            compatible = "zmk,behavior-tap-dance";
            label = "EN_PIPE_AMPERSAND";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp AMPERSAND>;

            tapping-term-ms = <200>;
        };

        ru_pipe_ampersand: ru_pipe_ampersand {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_PIPE_AMPERSAND";
            #binding-cells = <0>;
            bindings = <&en PIPE>, <&en AMPERSAND>;

            tapping-term-ms = <200>;
        };

        en_at_dollar: en_at_dollar {
            compatible = "zmk,behavior-tap-dance";
            label = "EN_AT_DOLLAR";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp DOLLAR>;

            tapping-term-ms = <200>;
        };

        ru_at_dollar: ru_at_dollar {
            compatible = "zmk,behavior-tap-dance";
            label = "RU_AT_DOLLAR";
            #binding-cells = <0>;
            bindings = <&en AT>, <&en DOLLAR>;

            tapping-term-ms = <200>;
        };
    };

    macros {
        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &lang_to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <50>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &lang_to_ru>;
            label = "LAYER_RU";
            wait-ms = <0>;
            tap-ms = <50>;
        };

        lang_to_en: leng_to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(N1))>;
            label = "LENG_TO_EN";
            wait-ms = <0>;
            tap-ms = <50>;
        };

        lang_to_ru: leng_to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(N2))>;
            label = "LENG_TO_RU";
            wait-ms = <0>;
            tap-ms = <50>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&lang_to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&lang_to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <50>;
        };

        mcr_forward: mcr_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_press>,
                <&kp RIGHT_ARROW>,
                <&macro_tap>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_COMMAND>,
                <&macro_release>;

            label = "MCR_FORWARD";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        mcr_back: mcr_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LEFT_COMMAND>,
                <&macro_press>,
                <&kp LEFT_ARROW>,
                <&macro_tap>,
                <&kp LEFT_ALT>,
                <&macro_release>,
                <&kp LEFT_COMMAND>,
                <&macro_release>;

            label = "MCR_BACK";
            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        switch_to_en {
            bindings = <&layer_en>;
            key-positions = <16 15>;
            layers = <1>;
        };

        switch_to_ru {
            bindings = <&layer_ru>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_en {
            bindings = <
&kp GRAVE  &kp Q         &kp W        &kp E        &kp R         &kp T                                &kp Y            &kp U         &kp I        &kp O        &kp P            &none
&kp ESC    &hml LCTRL A  &hml LALT S  &hml LGUI D  &hml LSHFT F  &kp G                                &kp H            &hmr LSHFT J  &hmr LGUI K  &hmr LALT L  &hmr LCTRL SEMI  &kp SINGLE_QUOTE
&mo 7      &kp Z         &kp X        &kp C        &kp V         &kp B        &none        &none      &kp N            &kp M         &kp COMMA    &kp DOT      &kp SLASH        &kp BACKSLASH
                                                   &lt 4 TAB     &lt 2 SPACE  &kp ENTER    &kp ENTER  &lt 2 BACKSPACE  &lt 4 DEL
            >;

            display-name = "EN";
            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        base_ru {
            display-name = "RU";
            bindings = <
&none    &kp RU_CYRILLIC_SHORT_I    &kp RU_CYRILLIC_TSE         &kp RU_CYRILLIC_U         &kp RU_CYRILLIC_KA        &ie_io                                      &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE       &kp RU_CYRILLIC_SHA       &kp RU_CYRILLIC_SHCHA     &kp RU_CYRILLIC_ZE          &kp RU_CYRILLIC_HA
&kp ESC  &hml LCTRL RU_CYRILLIC_EF  &hml LALT RU_CYRILLIC_YERU  &hml LGUI RU_CYRILLIC_VE  &hml LSHFT RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                          &kp RU_CYRILLIC_ER  &hmr LSHFT RU_CYRILLIC_O  &hmr LGUI RU_CYRILLIC_EL  &hmr LALT RU_CYRILLIC_DE  &hmr LCTRL RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&mo 7    &kp RU_CYRILLIC_YA         &kp RU_CYRILLIC_CHE         &kp RU_CYRILLIC_ES        &kp RU_CYRILLIC_EM        &kp RU_CYRILLIC_I   &none        &none      &kp RU_CYRILLIC_TE  &soft_sign_soft_hard      &kp RU_CYRILLIC_BE        &kp RU_CYRILLIC_YU        &kp SLASH                   &kp BACKSLASH
                                                                                          &lt 4 TAB                 &lt 3 SPACE         &kp ENTER    &kp ENTER  &lt 3 BACKSPACE     &lt 4 DELETE
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        sym_en {
            bindings = <
&kp GRAVE          &kp ASTRK  &kp LEFT_BRACE  &kp PLUS   &kp RIGHT_BRACE  &kp HASH                                    &en_at_dollar   &kp LESS_THAN     &kp EQUAL  &kp GREATER_THAN   &kp SLASH  &none
&kp DOUBLE_QUOTES  &kp COLON  &kp LPAR        &kp MINUS  &kp RPAR         &en_pipe_ampersand                          &en_qmark_excl  &kp LEFT_BRACKET  &kp UNDER  &kp RIGHT_BRACKET  &kp SEMI   &kp SQT
&kp COMMA          &kp N1     &kp N2          &kp N3     &kp N4           &kp N5              &kp CARET    &kp PRCNT  &kp N6          &kp N7            &kp N8     &kp N9             &kp N0     &kp DOT
                                                         &trans           &none               &trans       &trans     &none           &trans
            >;

            display-name = "Symbols EN";
        };

        sym_ru {
            display-name = "Symbols RU";
            bindings = <
&en GRAVE             &kp ASTRK     &en LEFT_BRACE  &kp PLUS   &en RIGHT_BRACE  &en HASH                                         &ru_at_dollar   &en LESS_THAN     &kp EQUAL  &en GREATER_THAN   &kp RU_SLASH  &none
&kp RU_DOUBLE_QUOTES  &kp RU_COLON  &kp LPAR        &kp MINUS  &kp RPAR         &ru_pipe_ampersand                               &ru_qmark_excl  &en LEFT_BRACKET  &kp UNDER  &en RIGHT_BRACKET  &kp RU_SEMI   &en SQT
&kp RU_COMMA          &kp N1        &kp N2          &kp N3     &kp N4           &kp N5              &kp CARET    &en RU_PERCENT  &kp N6          &kp N7            &kp N8     &kp N9             &kp N0        &kp RU_DOT
                                                               &trans           &none               &trans       &trans          &none           &trans
            >;
        };

        nav {
            bindings = <
&none  &kp LG(N1)    &kp LG(N2)  &kp LG(N3)    &kp LG(N4)     &kp LG(N5)                             &kp LG(N6)    &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp LG(N0)  &kp F12
&none  &kp LC(LEFT)  &kp LC(UP)  &kp LC(DOWN)  &kp LC(RIGHT)  &none                                  &none         &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none
&none  &kp LC(N1)    &kp LC(N2)  &kp LC(N3)    &kp LC(N4)     &kp LC(N5)  &none           &none      &none         &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &none
                                               &none          &mcr_back   &mcr_forward    &mcr_back  &mcr_forward  &none
            >;

            display-name = "Navigation";
        };

        adj {
            bindings = <
&bootloader  &trans  &kp F1  &kp F2   &kp F3   &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans       &trans  &kp F5  &kp F6   &kp F7   &kp F8                     &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans        &studio_unlock
&trans       &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &trans        &trans
                                      &trans   &trans   &trans    &trans  &trans        &trans
            >;

            display-name = "Adjust";
        };

        game {
            bindings = <
&kp T    &kp N1          &kp N2  &kp W  &kp NUMBER_3  &kp R                      &none  &none           &kp I           &kp O         &none            &none
&kp ESC  &kp LEFT_SHIFT  &kp A   &kp S  &kp D         &kp F                      &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&mo 7    &none           &kp X   &kp C  &kp V         &kp U      &kp Y    &none  &kp N  &kp M           &none           &none         &none            &none
                                        &kp TAB       &kp SPACE  &none    &none  &none  &none
            >;

            label = "Game";
        };

        System {
            bindings = <
&none  &none  &none  &none  &none                 &none                               &none               &kp C_VOLUME_DOWN  &kp K_MUTE        &kp C_VOLUME_UP  &none  &tog 6
&none  &none  &none  &none  &kp LS(LG(NUMBER_5))  &none                               &none               &kp LG(PLUS)       &kp LG(MINUS)     &kp LG(N0)       &none  &none
&none  &none  &none  &none  &none                 &none  &none    &none               &none               &kp K_PREVIOUS     &kp K_PLAY_PAUSE  &kp K_NEXT       &none  &none
                            &none                 &none  &none    &kp LC(LS(LA(N0)))  &kp LS(LA(LC(N1)))  &none
            >;

            label = "System";
        };
    };
};
